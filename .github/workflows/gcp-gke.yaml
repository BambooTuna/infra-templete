name: GCP GKE

on:
  push:
    branches: [ fix/gke-infra ]

jobs:
#  apply-environment:
#    name: Terraform Develop Staging
#    runs-on: ubuntu-latest
#    env:
#      TF_ACTIONS_VERSION: "0.13.4"
#      GOOGLE_SERVICE_KEY: ${{ secrets.GOOGLE_SERVICE_KEY }}
#      GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
#      GOOGLE_COMPUTE_REGION: ${{ secrets.GOOGLE_COMPUTE_REGION }} # "asia-northeast1"
#      GOOGLE_COMPUTE_ZONE: ${{ secrets.GOOGLE_COMPUTE_ZONE }} # "asia-northeast1-a"
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v2
#
#      - name: Set up Cloud SDK
#        uses: google-github-actions/setup-gcloud@v0.2.0
#        with:
#          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
#          service_account_key: ${{ secrets.GOOGLE_SERVICE_KEY }}
#          export_default_credentials: true
#      - uses: hashicorp/setup-terraform@v1
#        with:
#          terraform_version: ${{ env.TF_ACTIONS_VERSION }}
#      - name: Terraform - init
#        working-directory: gcp/gke/terraform
#        run: terraform init
#      - name: Terraform - apply
#        working-directory: gcp/gke/terraform
#        run: terraform apply -auto-approve
  deploy:
    name: Terraform Develop Staging
    runs-on: ubuntu-latest
    env:
      TF_ACTIONS_VERSION: "0.13.4"
      GOOGLE_SERVICE_KEY: ${{ secrets.GOOGLE_SERVICE_KEY }}
      GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      GOOGLE_COMPUTE_REGION: ${{ secrets.GOOGLE_COMPUTE_REGION }} # "asia-northeast1"
      GOOGLE_COMPUTE_ZONE: ${{ secrets.GOOGLE_COMPUTE_ZONE }} # "asia-northeast1-a"
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_SERVICE_KEY }}
          export_default_credentials: true
      - name: Configure docker to use the gcloud cli
        run: gcloud auth configure-docker --quiet
      - name: Build and Push a docker image
        working-directory: gcp/gke/app
        run: |
          export DOCKER_BUILDKIT=1
          docker build -t asia.gcr.io/${GOOGLE_PROJECT_ID}/server:${GITHUB_SHA::7} --cache-from=asia.gcr.io/${GOOGLE_PROJECT_ID}/cache:latest --build-arg BUILDKIT_INLINE_CACHE=1  .
          docker build --target builder -t asia.gcr.io/${GOOGLE_PROJECT_ID}/cache:latest --build-arg BUILDKIT_INLINE_CACHE=1  .
          docker push asia.gcr.io/${GOOGLE_PROJECT_ID}/cache:latest &
          docker push asia.gcr.io/${GOOGLE_PROJECT_ID}/server:${GITHUB_SHA::7} &
          wait
      - name: Apply Manifest
        working-directory: gcp/gke/deploy
        run: |
          gcloud container clusters get-credentials container-cluster --zone ${GOOGLE_COMPUTE_ZONE} --project ${GOOGLE_PROJECT_ID}
          export API_SERVER_IMAGE=asia.gcr.io/${GOOGLE_PROJECT_ID}/server:${GITHUB_SHA::7}
          export MYSQL_INSTANCE_NAME="mysql"
          cat template/cloudsql-proxy_tpl.yaml | envsubst > cloudsql-proxy.yaml
          cat template/api-server_tpl.yaml | envsubst > api-server.yaml
          kubectl apply -f .